from aiogram.filters import CommandStart, Command
from aiogram.types import Message, ContentType
from aiogram import Router
from aiogram import F
import random
import json

r = Router()

@r.message(F.text.lower() == '–ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ñ—Ä–∞–∑—ã')
async def add_phrase(ms: Message):
    print(ms.chat.id)
    with open("data.json") as dataFile:
        dataInfo = json.load(dataFile)
        for i in dataInfo['info']:
            flag = False
            if(int(i['id']) == ms.chat.id):
                random_phrases = i['phrases']
                flag = True
                break
        if(flag == False):
            await ms.reply('—Ñ—Ä–∞–∑ –Ω–µ—Ç –∫–∞—Ä–æ—á–µ')
            dataInfo['info'].append({
                "id":ms.chat.id,
                "phrases":[]
            })
            with open('data.json', 'w') as dataW:
                json.dump(dataInfo, dataW, indent=4,ensure_ascii=False)
            return 0
    if len(random_phrases) == 0:
        await ms.reply('—Ñ—Ä–∞–∑ –Ω–µ—Ç –∫–∞—Ä–æ—á–µ')
        return 0
    answer = '–≤–æ—Ç —Ç–µ —Ñ—Ä–∞–∑—ã\n'
    for i in range(len(random_phrases)):
        answer += f'{i+1}: {random_phrases[i]}\n'
    await ms.reply(answer)
    
@r.message(F.text.startswith('–¥–æ–±–∞–≤–∏—Ç—å —Ñ—Ä–∞–∑—É'))
async def add_phrase(ms: Message):
    with open("data.json") as dataFile:
        dataInfo = json.load(dataFile)
        for i in dataInfo['info']:
            flag = False
            if(int(i['id']) == ms.chat.id):
                if ms.text[15:] in i['phrases']:
                    await ms.reply('–µ—Å—Ç—å —Ç–∞–∫–∞—è —Ñ—Ä–∞–∑–∞ –ø—É–ø—Å–∏–∫')
                    return 0
                i['phrases'].append(ms.text[15:])
                flag = True
                with open('data.json', 'w') as dataW:
                    json.dump(dataInfo, dataW, indent=4,ensure_ascii=False)
                break
        if(flag == False):
            await ms.reply('—Ñ—Ä–∞–∑ –Ω–µ—Ç –∫–∞—Ä–æ—á–µ')
            dataInfo['info'].append({
                "id":ms.chat.id,
                "phrases":[]
            })
            with open('data.json', 'w') as dataW:
                json.dump(dataInfo, dataW, indent=4,ensure_ascii=False)
            return 0
    await ms.reply('–¥–æ–±–∞–≤–µ–ª—å')
    
@r.message(F.text.startswith('—É–¥–∞–ª–∏—Ç—å —Ñ—Ä–∞–∑—É'))
async def add_phrase(ms: Message):
    with open("data.json") as dataFile:
        dataInfo = json.load(dataFile)
        for i in dataInfo['info']:
            flag = False
            if(int(i['id']) == ms.chat.id):
                if len(ms.text.split(' ')) < 3:
                    await ms.reply('—ç—ç—ç, –∞ –≥–¥–µ —á–∏—Å–ª–æ, —á–µ —É–¥–∞–ª—è—Ç—å')
                    return 0
                id = ms.text.split(' ')[2]
                if int(id) > len(i['phrases']):
                    await ms.reply('—Ç–∏ —à–æ –µ–±–æ–±–æ, –Ω–µ—Ç —Ç–∞–∫–æ–π —Ñ—Ä–∞–∑—É')
                    return 0
                elif int(id) < 1:
                    await ms.reply('—Ç–∏ —à–æ –µ–±–æ–±–æ, –∫–∞–∫–æ –º–µ–Ω—å—à–µ –æ—Ç–Ω–∞–≥–æ')
                    return 0
                i['phrases'].remove(i['phrases'][int(id)-1])
                await ms.reply('—É–¥–∞–ª–∏–ª, –ø—Ä–æ–≤–µ—Ä—è–πüòà')
                flag = True
                with open('data.json', 'w') as dataW:
                    json.dump(dataInfo, dataW, indent=4,ensure_ascii=False)
                break
        if(flag == False):
            await ms.reply('—Ñ—Ä–∞–∑ –Ω–µ—Ç –∫–∞—Ä–æ—á–µ')
            dataInfo['info'].append({
                "id":ms.chat.id,
                "phrases":[]
            })
            with open('data.json', 'w') as dataW:
                json.dump(dataInfo, dataW, indent=4,ensure_ascii=False)
            return 0

@r.message()
async def on_photo(ms: Message):
    if ms.content_type != ContentType.VIDEO and ms.content_type != ContentType.PHOTO and ms.content_type != ContentType.ANIMATION and ms.content_type != ContentType.STICKER:
        return 0
    with open("data.json") as dataFile:
        dataInfo = json.load(dataFile)
        for i in dataInfo['info']:
            flag = False
            if(int(i['id']) == ms.chat.id):
                if (i['phrases'] == []):
                    return 0
                test = random.randint(0,(len(i['phrases'])-1))
                print(test)
                await ms.reply(i['phrases'][test])
                flag = True
                break
        if(flag == False):
            await ms.reply('—Ñ—Ä–∞–∑ –Ω–µ—Ç –∫–∞—Ä–æ—á–µ')
            dataInfo['info'].append({
                "id":ms.chat.id,
                "phrases":[]
            })
            with open('data.json', 'w') as dataW:
                json.dump(dataInfo, dataW, indent=4,ensure_ascii=False)
            return 0